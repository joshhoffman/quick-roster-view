service: serverless-offline-plugins-service

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    UNIT_TABLE_NAME:
     ${self:resources.Resources.unitTable.Properties.TableName}
    WEAPON_TABLE_NAME:
      ${self:resources.Resources.weaponTable.Properties.TableName}
    STAGE:
      ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:${opt:region,self:provider.region}:*:table/${self:provider.environment.UNIT_TABLE_NAME}"
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:${opt:region,self:provider.region}:*:table/${self:provider.environment.WEAPON_TABLE_NAME}"
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

package:
  exclude:
    - pkg/**
    - src/go/vendor/**

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true

functions:
  createUnits:
    handler: node/createUnits.handler
    events:
      - http:
          path: units
          method: post
          cors: true
  getUnits:
    handler: node/getUnits.handler
    events:
      - http:
          path: units
          method: get
          cors: true
  createWeapons:
    handler: createWeapons.handler
    runtime: python2.7
    events:
    - http:
        path: weapons
        method: post
        cors: true
  getWeapons:
    handler: src/go/bin/getWeapons
    runtime: go1.x
    package:
      exclude:
        - ./**
      include:
        - ./src/go/bin/**
    events:
    - http:
        path: weapons
        method: get
        cors: true

resources:
  Resources:
    unitTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: units-${self:provider.environment.STAGE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    weaponTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: weapons-${self:provider.environment.STAGE}
        AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: name
          AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: name
          KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5